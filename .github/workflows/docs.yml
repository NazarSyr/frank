name: docs

# Run this workflow when a review is requested on a PR, or the PR is closed
on:
  pull_request:
    types: [review_requested, closed]

jobs:
  docs-build:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install docs dependencies
        run: |
          sudo apt-get install pandoc
          pip install setuptools --upgrade
          pip install .[test,docs-build]
      - name: Make docs
        run: |
          pip install .
          cd docs
          make html
      # check code coverage, store results in the built docs
      - name: Coverage
        run: |
          coverage run --source=frank -m pytest frank/tests.py
          coverage report
          mkdir -p docs/_build/html/coverage
          coverage html -d docs/_build/html/coverage
          coverage-badge -f -o docs/_build/html/coverage/badge.svg
      # upload the built docs as an 'artifact' so the files can be accessed
      # by a subsequent job in the workflow.
      # only store the artifact for 'retention-days'
      - name: Upload docs
        # only continue if the PR is not just closed, but also merged
        if: github.event.pull_request.merged == true
        uses: actions/upload-artifact@v3
        with:
          name: built_docs
          path: docs/_build/html
          retention-days: 1

  docs-deploy:
    name: Deploy docs
    needs: docs-build
    # if the PR is not just closed, but also merged
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      # download the previously uploaded 'built_docs' artifact to docs/_build
      - name: Download docs
        uses: actions/download-artifact@v3
        id: download
        with:
          name: built_docs
          path: docs/_build
      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}
      - name: Disable jekyll builds
        run: touch docs/_build/html/.nojekyll
      - name: Install and configure dependencies
        run: |
          npm install -g --silent gh-pages@2.0.1
          git config user.email "github-actions@ast.cam.ac.uk"
          git config user.name "github-actions"
      - name: Deploy docs to gh-pages branch
        run: gh-pages --dotfiles --message "[skip actions] Updates" --dist docs/_build/html
